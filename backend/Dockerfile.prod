# Build stage
FROM golang:1.24.2-bookworm AS builder

WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o app .

# Final stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata netcat-openbsd

# Create a non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Set the working directory
WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/app /app/app

# Copy migration files
COPY --from=builder /app/migrations ./migrations

# Copy entrypoint script and migrate.sh
COPY --from=builder /app/entrypoint.prod.sh .
COPY --from=builder /app/migrate.sh .

# Set permissions and create symlink
RUN chmod +x /app/entrypoint.prod.sh && \
    chmod +x /app/app && \
    chmod +x /app/migrate.sh && \
    ln -sf /app/migrate.sh /app/migrate

# Switch to non-root user
USER appuser

# Expose the port the app runs on
EXPOSE 8080

# Command to run the application
CMD ["/app/entrypoint.prod.sh"]
